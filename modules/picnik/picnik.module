<?php
// $Id$

/**
 * Implementation of hook_perm().
 */
function picnik_perm() {
  return array('administer picnik', 'edit all images', 'edit own images');
}

/**
 * Implementation of hook_menu().
 */
function picnik_menu() {
  $items = array();
  $items['admin/settings/picnik'] = array(
    'title' => 'Picnik Setting',
    'description' => 'Settings for picnik integration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('picnik_settings'),
    'file' => 'picnik.admin.inc',
    'access arguments' => array('administer picnik'),
  );

  $items['picnik/process'] = array(
    'title' => t('Picnik Image Processing'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('picnik_process_image'),
    'access arguments' => array('edit own images'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implementation of hook_nodeapi().
 */
function picnik_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  // Check for the node types when viewing a node
  $enabled_content_types = array_filter(variable_get('picnik_node_types', array()));
  if ($op == 'view' && in_array( $node->type, $enabled_content_types) ) {

    //Check for the users permission
    global $user;
    if (user_access('edit all images', $user)) {
      picnik_add_js('full', $node->nid);
    }
    elseif (user_access('edit own images', $user) && node_access('update', $node, $user)) {
      picnik_add_js('restricted', $node->nid);
    }
  }
}

/**
 * Implementation of hook_init().
 */
function picnik_init() {
  drupal_add_js(array(
    'picnik_css_selector' => variable_get('picnik_css_selector', ''),
    'picnik_css_skip' => variable_get('picnik_css_skip', ''),
    'picnik_api_key' => variable_get('picnik_api_key', ''),
  ), 'setting');
}

function picnik_process_image($form_state, $nid, $imagecache = FALSE) {
  // Load JS file to fix the image preview
  drupal_add_js(drupal_get_path('module', 'picnik') . '/picnik.js');

  $form = array();
  $form['#redirect'] = 'node/' . $nid;

  // Make sure we've been sent an image url
  if (!isset($_GET['file'])) {
    drupal_set_message(t('Sorry, no image URL was sent'), 'error');
    drupal_goto("node/" . $nid);
  }
  $image_url = $_GET['file'];

  // Make sure that the image came from picnik.  We don't want anyone
  // sending us data we didn't ask for!
  if (0 !== stripos( $image_url, "http://www.picnik.com")) {
    drupal_set_message(t('Sorry, the image URL doesn\'t seem right.'), 'error');
    drupal_goto("node/" . $nid);
  }

  // Download the image data from Picnik's servers
  $image_data = file_get_contents( $image_url );
  if (FALSE === $image_data) {
    drupal_set_message(t('Download failed.'), 'error');
    drupal_goto("node/" . $nid);
  }

  $tmp_dir = variable_get('picnik_tmp_path', '');
  $image_filename = $tmp_dir . "/" . time() . rand(10000, 99999) . ".jpg";
  $new_image = file_save_data($image_data, $image_filename);

  $form['new_image'] = array('#type' => 'value', '#value' => $new_image);
  $form['old_image'] = array('#type' => 'value', '#value' => $_GET['_imageid']);
  $form['clear_imagecache'] = array('#type' => 'value', '#value' => $imagecache);


  $preview = theme('picnik_image_preview', $_GET['_imageid'], 'original') . theme('picnik_image_preview', $new_image);


  return confirm_form($form,
    t('Do you want to replace the original image?'),
    'node/'. $nid,
    $preview . t('This action cannot be undone.'),
    t('Replace'),
    t('Cancel')
  );
}

function picnik_process_image_submit($form, &$form_state) {
  if (!empty($form_state['values']['old_image']) && !empty($form_state['values']['new_image'])) {
    $new = $form_state['values']['new_image'];
    $old = $form_state['values']['old_image'];

    if (file_move($new, $old, FILE_EXISTS_REPLACE)) {
      drupal_set_message(t('The image has been updated.<br />You might have to reload this page in order to see the new version of your image.'));
    }

    if ($form_state['values']['clear_imagecache']) {
      imagecache_image_flush($old);
    }
  }
}

function picnik_add_js($access, $nid) {
  drupal_add_css(drupal_get_path('module', 'picnik') . '/picnik.css');
  drupal_add_js(array('picnik_access' => $access, 'picnik_return' => $nid), 'setting');
  drupal_add_js(drupal_get_path('module', 'picnik') . '/picnik.js', 'core');
}

/**
 * Implementation of hook_theme().
 */
function picnik_theme($existing, $type, $theme, $path) {
  return array(
    'picnik_image_preview' => array(
      'arguments' => array('image' => NULL, 'state' => NULL),
      'file' => 'picnik.theme.inc',
    )
  );
}
